---
import "../styles/global.css";
import Input from "../components/form/input.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout>
    <div class="h-screen flex flex-col bg-black p-10">
        <form id="wizard-form" class="w-full max-w-5xl mx-auto flex flex-col h-full justify-between" autocomplete="off">
            <h1 class="text-4xl md:text-5xl font-light text-white mb-6">
                ¡GRACIAS POR TU INTERÉS EN<br />TRANSFORMAR TU NEGOCIO!
            </h1>
            <p class="text-gray-300 mb-8 max-w-5xl text-xl font-extralight">
                Este formulario nos ayudará a entender mejor tus necesidades y
                cómo podemos ayudarte a alcanzar tus metas de digitalización.
                Por favor, tómate unos minutos para completarlo.
            </p>

            <!-- Step 1 -->
            <div id="step-1" class="flex flex-col h-full">
                <div class="flex-1">
                    <div class="mb-6">
                        <span class="text-xl text-white underline underline-offset-4">1. INFORMACIÓN DE CONTACTO</span>
                    </div>
                    <div class="mb-4">
                        <Input
                            label=""
                            placeholder="Nombre Completo"
                            value=""
                            name="nombre"
                            data-input="nombre"
                        />
                        <div id="error-nombre" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="mb-4">
                        <Input
                            label=""
                            placeholder="Correo Electrónico"
                            value=""
                            name="email"
                            data-input="email"
                        />
                        <div id="error-email" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="mb-4">
                        <Input
                            type="tel"
                            label=""
                            placeholder="Número de Teléfono"
                            value=""
                            countryCode="+1"
                            name="telefono"
                            data-input="telefono"
                        />
                        <div id="error-telefono" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                </div>
                <div class="flex justify-center btn-container">
                    <button
                        type="button"
                        id="btn-next"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        Continuar
                        <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg" class="inline w-5 h-5 ml-3 arrow-svg">
                            <path d="M16.7 9.50001L11.9 4.70001M16.7 9.50001L11.9 14.3M16.7 9.50001H1.69995" stroke="currentColor"/>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Step 2 -->
            <div id="step-2" class="hidden flex flex-col h-full">
                <div class="flex-1">
                    <div class="mb-6">
                        <span class="text-xl text-white underline underline-offset-4">2. INFORMACIÓN DE TU NEGOCIO</span>
                    </div>
                    <div class="mb-4">
                        <Input
                            label=""
                            placeholder="Nombre de la Empresa"
                            value=""
                            name="empresa"
                            data-input="empresa"
                        />
                        <div id="error-empresa" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="mb-4">
                        <Input
                            label=""
                            placeholder="Industria / Sector"
                            value=""
                            name="industria"
                            data-input="industria"
                        />
                        <div id="error-industria" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="mb-4">
                        <Input
                            label=""
                            placeholder="Número de Empleados"
                            value=""
                            name="empleados"
                            data-input="empleados"
                        />
                        <div id="error-empleados" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="mb-4">
                        <Input
                            label=""
                            placeholder="Cargo / Puesto en la empresa"
                            value=""
                            name="cargo_empresa"
                            data-input="cargo_empresa"
                        />
                        <div id="error-cargo_empresa" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="mb-2">
                        <Input
                            label=""
                            placeholder="Website (si aplica)"
                            value=""
                            name="website"
                            data-input="website"
                        />
                        <div id="error-website" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="text-sm text-gray-400">Pregunta no obligatoria*</div>
                </div>
                <div class="flex justify-between btn-container">
                    <button
                        type="button"
                        id="btn-prev"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        <span class="mr-2">←</span> Anterior
                    </button>
                    <button
                        type="button"
                        id="btn-next-2"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        Continuar
                        <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg" class="inline w-5 h-5 ml-3 arrow-svg">
                            <path d="M16.7 9.50001L11.9 4.70001M16.7 9.50001L11.9 14.3M16.7 9.50001H1.69995" stroke="currentColor"/>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Step 3 -->
            <div id="step-3" class="hidden flex flex-col h-full">
                <div class="flex-1">
                    <div class="mb-6">
                        <span class="text-xl text-white underline underline-offset-4">3. CAPACIDAD DE INVERSIÓN EN SOFTWARE Y AUTOMATIZACIÓN (ANUAL)</span>
                    </div>
                    <div class="text-gray-300 text-sm mb-6 max-w-5xl font-extralight">
                        Para asegurarnos de que podemos ofrecerte las soluciones más adecuadas, por favor, indícanos tu rango de inversión anual estimado para software y automatización. Esto nos ayuda a dimensionar el proyecto.
                    </div>
                    <div class="flex flex-col gap-4">
                        <label class="flex items-center gap-3 text-gray-400 cursor-pointer font-extralight">
                            <input type="radio" name="inversion" value="<36k" class="custom-radio mr-5" data-input="inversion" />
                            <span>Menos de $36,000 USD</span>
                        </label>
                        <label class="flex items-center gap-3 text-gray-400 cursor-pointer font-extralight">
                            <input type="radio" name="inversion" value="36k-60k" class="custom-radio mr-5" data-input="inversion" />
                            <span>$36,000 – 60,000 USD</span>
                        </label>
                        <label class="flex items-center gap-3 text-gray-400 cursor-pointer font-extralight">
                            <input type="radio" name="inversion" value="60k-96k" class="custom-radio mr-5" data-input="inversion" />
                            <span>$60,001 – 96,000 USD</span>
                        </label>
                        <label class="flex items-center gap-3 text-gray-400 cursor-pointer font-extralight">
                            <input type="radio" name="inversion" value="96k-144k" class="custom-radio mr-5" data-input="inversion" />
                            <span>$96,001 – 144,000 USD</span>
                        </label>
                        <label class="flex items-center gap-3 text-gray-400 cursor-pointer font-extralight">
                            <input type="radio" name="inversion" value="144k-240k" class="custom-radio mr-5" data-input="inversion" />
                            <span>$144,001 – 240,000 USD</span>
                        </label>
                        <label class="flex items-center gap-3 text-gray-400 cursor-pointer font-extralight">
                            <input type="radio" name="inversion" value=">240k" class="custom-radio mr-5" data-input="inversion" />
                            <span>Más de $240,000 USD</span>
                        </label>
                    </div>
                    <div id="error-inversion" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        <span></span>
                    </div>
                </div>
                <div class="flex justify-between btn-container">
                    <button
                        type="button"
                        id="btn-prev-3"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        <span class="mr-2">←</span> Anterior
                    </button>
                    <button
                        type="submit"
                        id="btn-submit"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        Continuar
                        <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg" class="inline w-5 h-5 ml-3 arrow-svg">
                            <path d="M16.7 9.50001L11.9 4.70001M16.7 9.50001L11.9 14.3M16.7 9.50001H1.69995" stroke="currentColor"/>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Step 4 -->
            <div id="step-4" class="hidden flex flex-col h-full">
                <div class="flex-1">
                    <div class="mb-6">
                        <span class="text-xl text-white underline underline-offset-4">4. DETALLES DE DIGITALIZACIÓN ACTUAL</span>
                    </div>
                    <div class="text-gray-300 text-md font-extralight mb-6 max-w-5xl">
                        Queremos entender tu situación actual para saber cómo podemos potenciar tu negocio. Por favor, responde de forma breve y honesta
                    </div>
                    <div class="mb-8">
                        <div class="text-white mb-2 text-gray-400 text-lg font-extralight">1. Describe el mayor desafío que enfrentas hoy en día con la gestión de tu información o procesos internos:</div>
                        <div class="relative">
                            <textarea maxlength="200" rows="3" name="desafio" data-input="desafio" class="w-full bg-transparent border-b border-gray-400 text-white px-0 py-2 resize-none focus:outline-none focus:border-white placeholder-gray-400"></textarea>
                            <span class="absolute right-0 bottom-0 text-gray-400 text-xs">//</span>
                        </div>
                        <div class="text-xs text-gray-400 mt-1"><span id="count-desafio">0</span>/200</div>
                        <div id="error-desafio" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="mb-8">
                        <div class="text-white mb-2 text-gray-400 text-lg font-extralight">2. ¿Qué herramientas digitales (además de correo electrónico básico) utilizas actualmente en tu negocio para la gestión diaria (ej. hojas de cálculo, CRM, software de contabilidad, herramientas de comunicación)?</div>
                        <div class="relative">
                            <textarea maxlength="200" rows="3" name="herramientas" data-input="herramientas" class="w-full bg-transparent border-b border-gray-400 text-white px-0 py-2 resize-none focus:outline-none focus:border-white placeholder-gray-400"></textarea>
                            <span class="absolute right-0 bottom-0 text-gray-400 text-xs">//</span>
                        </div>
                        <div class="text-xs text-gray-400 mt-1"><span id="count-herramientas">0</span>/200</div>
                        <div id="error-herramientas" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                    <div class="mb-8">
                        <div class="text-white mb-2 text-gray-400 text-lg font-extralight">3. Si pudieras automatizar una tarea repetitiva en tu negocio hoy mismo, ¿cuál sería y por qué?</div>
                        <div class="relative">
                            <textarea maxlength="200" rows="3" name="automatizar" data-input="automatizar" class="w-full bg-transparent border-b border-gray-400 text-white px-0 py-2 resize-none focus:outline-none focus:border-white placeholder-gray-400"></textarea>
                            <span class="absolute right-0 bottom-0 text-gray-400 text-xs">//</span>
                        </div>
                        <div class="text-xs text-gray-400 mt-1"><span id="count-automatizar">0</span>/200</div>
                        <div id="error-automatizar" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                </div>
                <div class="flex justify-between btn-container">
                    <button
                        type="button"
                        id="btn-prev-4"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        <span class="mr-2">←</span> Anterior
                    </button>
                    <button
                        type="submit"
                        id="btn-submit-4"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        Continuar
                        <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg" class="inline w-5 h-5 ml-3 arrow-svg">
                            <path d="M16.7 9.50001L11.9 4.70001M16.7 9.50001L11.9 14.3M16.7 9.50001H1.69995" stroke="currentColor"/>
                        </svg>
                    </button>
                </div>
            </div>
           
            <!-- Step 5 -->
            <div id="step-5" class="hidden flex flex-col h-full">
                <div class="flex-1">
                    <div class="mb-6">
                        <span class="text-xl text-white underline underline-offset-4">5. MOTIVACIÓN PARA LA TRANSFORMACIÓN DIGITAL</span>
                    </div>
                    <div class="text-gray-300 text-md font-extralight mb-6 max-w-5xl">
                        Comprender tu visión es clave para nosotros. Por favor, comparte tu principal motivación para buscar la transformación digital en tu empresa
                    </div>
                    <div class="mb-8">
                        <div class="text-white mb-2 text-gray-400 text-lg font-extralight">¿Qué te impulsa a buscar la transformación digital en este momento? ¿Qué problema(s) esperas resolver o qué oportunidad(es) esperas aprovechar al digitalizar tu negocio?</div>
                        <div class="relative">
                            <textarea maxlength="200" rows="3" name="motivacion" data-input="motivacion" class="w-full bg-transparent border-b border-gray-400 text-white px-0 py-2 resize-none focus:outline-none focus:border-white placeholder-gray-400"></textarea>
                            <span class="absolute right-0 bottom-0 text-gray-400 text-xs">//</span>
                        </div>
                        <div class="text-xs text-gray-400 mt-1"><span id="count-motivacion">0</span>/200</div>
                        <div id="error-motivacion" class="text-red-500 text-sm mt-2 font-extralight hidden flex items-center gap-2">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8 5.33333V8M8 10.6667H8.00667M2 8C2 8.78793 2.15519 9.56815 2.45672 10.2961C2.75825 11.0241 3.20021 11.6855 3.75736 12.2426C4.31451 12.7998 4.97595 13.2417 5.7039 13.5433C6.43185 13.8448 7.21207 14 8 14C8.78793 14 9.56815 13.8448 10.2961 13.5433C11.0241 13.2417 11.6855 12.7998 12.2426 12.2426C12.7998 11.6855 13.2417 11.0241 13.5433 10.2961C13.8448 9.56815 14 8.78793 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8Z" stroke="#ED8296" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span></span>
                        </div>
                    </div>
                </div>
                <div class="flex justify-between btn-container">
                    <button
                        type="button"
                        id="btn-prev-5"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        <span class="mr-2">←</span> Anterior
                    </button>
                    <button
                        type="submit"
                        id="btn-submit-final"
                        class="flex items-center gap-2 border border-white rounded-full px-8 py-2 text-white hover:bg-white hover:text-[#191B1C] active:bg-[#191B1C] active:text-white transition"
                    >
                        Enviar
                        <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg" class="inline w-5 h-5 ml-3 arrow-svg">
                            <path d="M16.7 9.50001L11.9 4.70001M16.7 9.50001L11.9 14.3M16.7 9.50001H1.69995" stroke="currentColor"/>
                        </svg>
                    </button>
                </div>
            </div>
        </form>
    </div>
</Layout>

<script>
    const step1 = document.getElementById("step-1") as HTMLElement;
    const step2 = document.getElementById("step-2") as HTMLElement;
    const step3 = document.getElementById("step-3") as HTMLElement;
    const step4 = document.getElementById("step-4") as HTMLElement;
    const step5 = document.getElementById("step-5") as HTMLElement;
    const btnNext = document.getElementById("btn-next") as HTMLElement;
    const btnPrev = document.getElementById("btn-prev") as HTMLElement;
    const btnPrev3 = document.getElementById("btn-prev-3") as HTMLElement;
    const btnPrev4 = document.getElementById("btn-prev-4") as HTMLElement;
    const btnPrev5 = document.getElementById("btn-prev-5") as HTMLElement;
    const form = document.getElementById("wizard-form") as HTMLElement;
    const btnNext2 = document.getElementById("btn-next-2") as HTMLElement;
    const btnNext3 = document.getElementById("btn-submit") as HTMLElement;
    const btnNext4 = document.getElementById("btn-submit-4") as HTMLElement;
    const btnNextFinal = document.getElementById("btn-submit-final") as HTMLElement;

    // Estado simple en JS
    const formData = {
        nombre: "",
        email: "",
        telefono: "",
        pais: "+1",
        empresa: "",
        industria: "",
        empleados: "",
        cargo_empresa: "",
        website: "",
        inversion: "",
        desafio: "",
        herramientas: "",
        automatizar: "",
        motivacion: "",
    };

    // Funciones de validación
    function showError(fieldName: string, message: string) {
        const errorElement = document.getElementById(`error-${fieldName}`);
        if (errorElement) {
            const spanElement = errorElement.querySelector('span');
            if (spanElement) {
                spanElement.textContent = message;
            }
            errorElement.classList.remove('hidden');
        }
        
        // Agregar borde rojo al input
        const inputElement = document.querySelector(`[data-input="${fieldName}"]`) as HTMLElement;
        if (inputElement) {
            const inputContainer = inputElement.closest('.flex.items-center.border-b');
            if (inputContainer) {
                inputContainer.classList.remove('border-gray-400', 'focus-within:border-white');
                inputContainer.classList.add('border-red-500', 'focus-within:border-red-500');
            }
        }
        
        // Para textareas
        const textareaElement = document.querySelector(`textarea[data-input="${fieldName}"]`) as HTMLTextAreaElement;
        if (textareaElement) {
            textareaElement.classList.remove('border-gray-400', 'focus:border-white');
            textareaElement.classList.add('border-red-500', 'focus:border-red-500');
        }
    }

    function hideError(fieldName: string) {
        const errorElement = document.getElementById(`error-${fieldName}`);
        if (errorElement) {
            errorElement.classList.add('hidden');
        }
        
        // Remover borde rojo del input
        const inputElement = document.querySelector(`[data-input="${fieldName}"]`) as HTMLElement;
        if (inputElement) {
            const inputContainer = inputElement.closest('.flex.items-center.border-b');
            if (inputContainer) {
                inputContainer.classList.remove('border-red-500', 'focus-within:border-red-500');
                inputContainer.classList.add('border-gray-400', 'focus-within:border-white');
            }
        }
        
        // Para textareas
        const textareaElement = document.querySelector(`textarea[data-input="${fieldName}"]`) as HTMLTextAreaElement;
        if (textareaElement) {
            textareaElement.classList.remove('border-red-500', 'focus:border-red-500');
            textareaElement.classList.add('border-gray-400', 'focus:border-white');
        }
    }

    function validateEmail(email: string): boolean {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    function validatePhone(phone: string): boolean {
        const phoneRegex = /^\+?[\d\s\-\(\)]{10,}$/;
        return phoneRegex.test(phone);
    }

    function validateWebsite(website: string): boolean {
        if (!website) return true; // Website es opcional
        const websiteRegex = /^https?:\/\/.+/;
        return websiteRegex.test(website);
    }

    function validateStep1(): boolean {
        let isValid = true;
        
        // Validar nombre
        if (!formData.nombre.trim()) {
            showError('nombre', 'El nombre es obligatorio');
            isValid = false;
        } else if (formData.nombre.trim().length < 2) {
            showError('nombre', 'El nombre debe tener al menos 2 caracteres');
            isValid = false;
        } else {
            hideError('nombre');
        }

        // Validar email
        if (!formData.email.trim()) {
            showError('email', 'El correo electrónico es obligatorio');
            isValid = false;
        } else if (!validateEmail(formData.email)) {
            showError('email', 'Ingresa un correo electrónico válido');
            isValid = false;
        } else {
            hideError('email');
        }

        // Validar teléfono
        if (!formData.telefono.trim()) {
            showError('telefono', 'El número de teléfono es obligatorio');
            isValid = false;
        } else if (!validatePhone(formData.telefono)) {
            showError('telefono', 'Ingresa un número de teléfono válido');
            isValid = false;
        } else {
            hideError('telefono');
        }

        return isValid;
    }

    function validateStep2(): boolean {
        let isValid = true;
        
        // Validar empresa
        if (!formData.empresa.trim()) {
            showError('empresa', 'El nombre de la empresa es obligatorio');
            isValid = false;
        } else {
            hideError('empresa');
        }

        // Validar industria
        if (!formData.industria.trim()) {
            showError('industria', 'La industria es obligatoria');
            isValid = false;
        } else {
            hideError('industria');
        }

        // Validar empleados
        if (!formData.empleados.trim()) {
            showError('empleados', 'El número de empleados es obligatorio');
            isValid = false;
        } else {
            hideError('empleados');
        }

        // Validar cargo empresa
        if (!formData.cargo_empresa.trim()) {
            showError('cargo_empresa', 'El cargo en la empresa es obligatorio');
            isValid = false;
        } else {
            hideError('cargo_empresa');
        }

        // Validar website (opcional)
        if (formData.website && !validateWebsite(formData.website)) {
            showError('website', 'Ingresa una URL válida (debe comenzar con http:// o https://)');
            isValid = false;
        } else {
            hideError('website');
        }

        return isValid;
    }

    function validateStep3(): boolean {
        if (!formData.inversion) {
            showError('inversion', 'Debes seleccionar un rango de inversión');
            return false;
        } else {
            hideError('inversion');
            return true;
        }
    }

    function validateStep4(): boolean {
        let isValid = true;
        
        // Validar desafío
        if (!formData.desafio.trim()) {
            showError('desafio', 'Debes describir el mayor desafío que enfrentas');
            isValid = false;
        } else if (formData.desafio.trim().length < 10) {
            showError('desafio', 'La descripción debe tener al menos 10 caracteres');
            isValid = false;
        } else {
            hideError('desafio');
        }

        // Validar herramientas
        if (!formData.herramientas.trim()) {
            showError('herramientas', 'Debes describir las herramientas digitales que utilizas');
            isValid = false;
        } else if (formData.herramientas.trim().length < 10) {
            showError('herramientas', 'La descripción debe tener al menos 10 caracteres');
            isValid = false;
        } else {
            hideError('herramientas');
        }

        // Validar automatizar
        if (!formData.automatizar.trim()) {
            showError('automatizar', 'Debes describir qué tarea te gustaría automatizar');
            isValid = false;
        } else if (formData.automatizar.trim().length < 10) {
            showError('automatizar', 'La descripción debe tener al menos 10 caracteres');
            isValid = false;
        } else {
            hideError('automatizar');
        }

        return isValid;
    }

    function validateStep5(): boolean {
        if (!formData.motivacion.trim()) {
            showError('motivacion', 'Debes describir tu motivación para la transformación digital');
            return false;
        } else if (formData.motivacion.trim().length < 10) {
            showError('motivacion', 'La descripción debe tener al menos 10 caracteres');
            return false;
        } else {
            hideError('motivacion');
            return true;
        }
    }

    // Manejar eventos de input personalizados
    document.addEventListener('input-change', function(e: any) {
        const { value, name } = e.detail;
        formData[name as keyof typeof formData] = value;
        // Ocultar error cuando el usuario empiece a escribir
        hideError(name);
    });

    // Manejar eventos de cambio de país
    document.addEventListener('country-change', function(e: any) {
        const { value, name } = e.detail;
        if (name === 'telefono') {
            formData.pais = value;
        }
    });

    // Manejar eventos de radio buttons
    document.addEventListener('change', function(e: any) {
        const target = e.target as HTMLInputElement;
        if (target.type === 'radio' && target.name === 'inversion') {
            formData.inversion = target.value;
            hideError('inversion');
        }
    });

    // Contadores de caracteres para textareas
    const textareas = document.querySelectorAll('textarea[data-input]');
    textareas.forEach((textarea: any) => {
        const inputName = textarea.getAttribute('data-input');
        const counter = document.getElementById(`count-${inputName}`);
        
        if (counter) {
            // Actualizar contador inicial
            counter.textContent = textarea.value.length;
            
            // Evento para actualizar contador
            textarea.addEventListener('input', (e: any) => {
                const target = e.target as HTMLTextAreaElement;
                counter.textContent = target.value.length.toString();
                formData[inputName as keyof typeof formData] = target.value;
                // Ocultar error cuando el usuario empiece a escribir
                hideError(inputName);
            });
        }
    });

    // Wizard navigation con validación
    btnNext?.addEventListener("click", () => {
        if (validateStep1()) {
            step1?.classList.add("hidden");
            step2?.classList.remove("hidden");
        }
    });
    
    btnPrev?.addEventListener("click", () => {
        step2?.classList.add("hidden");
        step1?.classList.remove("hidden");
    });
    
    btnPrev3?.addEventListener("click", () => {
        step3?.classList.add("hidden");
        step2?.classList.remove("hidden");
    });
    
    btnPrev4?.addEventListener("click", () => {
        step4?.classList.add("hidden");
        step3?.classList.remove("hidden");
    });
    
    btnPrev5?.addEventListener("click", () => {
        step5?.classList.add("hidden");
        step4?.classList.remove("hidden");
    });
    
    btnNext2?.addEventListener("click", () => {
        if (validateStep2()) {
            step2?.classList.add("hidden");
            step3?.classList.remove("hidden");
        }
    });
    
    btnNext3?.addEventListener("click", (e) => {
        e.preventDefault();
        if (validateStep3()) {
            step3?.classList.add("hidden");
            step4?.classList.remove("hidden");
        }
    });
    
    btnNext4?.addEventListener("click", (e) => {
        e.preventDefault();
        if (validateStep4()) {
            step4?.classList.add("hidden");
            step5?.classList.remove("hidden");
        }
    });

    // URL del webhook de Make
    const MAKE_WEBHOOK_URL = 'https://hook.us1.make.com/ch0o1ng2r1i1657gcy5gkw24nfwpnwia';

    async function enviarDatosAMake(datos: any) {
        try {
            const response = await fetch(MAKE_WEBHOOK_URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    fecha_hora: new Date().toISOString(),
                    nombre: datos.nombre,
                    email: datos.email,
                    telefono: datos.pais + ' ' + datos.telefono,
                    empresa: datos.empresa,
                    industria: datos.industria,
                    empleados: datos.empleados,
                    cargo: datos.cargo_empresa,
                    website: datos.website || 'No especificado',
                    inversion: datos.inversion,
                    desafio: datos.desafio,
                    herramientas: datos.herramientas,
                    automatizar: datos.automatizar,
                    motivacion: datos.motivacion
                })
            });

            if (response.ok) {
                console.log('✅ Datos enviados exitosamente a Google Sheets');
                return true;
            } else {
                console.error('❌ Error al enviar datos:', response.statusText);
                return false;
            }
        } catch (error) {
            console.error('❌ Error de conexión:', error);
            return false;
        }
    }

    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Validar el paso final
        if (validateStep5()) {
            // Deshabilitar botón para evitar envíos múltiples
            const submitBtn = document.getElementById('btn-submit-final') as HTMLButtonElement;
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = 'Enviando... <span class="ml-2">⏳</span>';
            }

            // Mostrar datos en consola (opcional para debug)
            // console.log('=== ENVIANDO DATOS A GOOGLE SHEETS ===');
            // console.log('Datos del formulario:', formData);
            
            // Enviar datos a Make
            const exitoso = await enviarDatosAMake(formData);
            
            if (exitoso) {
                // Redirigir a página de agradecimiento
                window.location.href = '/gracias';
            } else {
                // Mostrar error y reactivar botón
                alert('❌ Hubo un error al enviar el formulario. Por favor, inténtalo de nuevo.');
                if (submitBtn) {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = 'Enviar <span class="ml-2">→</span>';
                }
            }
        }
    });

    // Función para ajustar el posicionamiento de los botones según el scroll
    function adjustButtonPosition() {
        const btnContainers = document.querySelectorAll('.btn-container');
        const hasScroll = document.documentElement.scrollHeight > document.documentElement.clientHeight;
        
        btnContainers.forEach(container => {
            if (hasScroll) {
                container.classList.add('mb-40');
            } else {
                container.classList.remove('mb-40');
            }
        });
    }

    // Ejecutar al cargar la página
    adjustButtonPosition();
    
    // Ejecutar cuando cambie el tamaño de la ventana
    window.addEventListener('resize', adjustButtonPosition);
    
    // Ejecutar cuando cambie el contenido (para detectar cambios en el scroll)
    const observer = new MutationObserver(adjustButtonPosition);
    observer.observe(document.body, { childList: true, subtree: true });
</script>

<style>
.arrow-svg {
  transition: color 0.2s, filter 0.2s;
}
button:hover .arrow-svg, a:hover .arrow-svg {
  /* No filter needed, color is controlled by currentColor */
}
</style>
